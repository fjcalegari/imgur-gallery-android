/**
* Shared file between builds so that they can all use the same dependencies and
* maven repositories.
**/
ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = "3.5.2"
versions.kotlin = "1.3.50"

//support
versions.support = "1.0.0"
versions.design = "1.2.0-alpha01"
versions.constraintlayout = "1.1.3"
versions.swiperefreshlayout = "1.1.0-alpha02"

//arch
versions.lifecycle = "2.1.0"

// Rx
versions.rx2java = '2.2.6'
versions.rx2kotlin = '2.3.0'
versions.rx2android = '2.1.1'

// Retrofit
versions.retrofit = '2.3.0'
versions.okhttp = '3.10.0'

// Dagger
versions.dagger = '2.21'

// Glide
versions.glide = '4.9.0'

// Other
versions.timber = '4.7.1'
versions.gson = '2.8.2'

// Test
versions.junit = '4.12'
versions.mockito = '2.19.0'
versions.mockito_kotlin = '2.0.0'
versions.core_testing = '1.1.1'
versions.espresso = '3.1.0'
versions.runner = '1.1.0'
versions.rules = '1.1.0'

def deps = [:]

def support = [:]
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core_ktx = "androidx.core:core-ktx:$versions.support"
support.appcompat = "androidx.appcompat:appcompat:$versions.support"
support.design = "com.google.android.material:material:$versions.design"
support.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
support.swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swiperefreshlayout"
deps.support = support

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.reactivestreams = "android.arch.lifecycle:reactivestreams:$versions.lifecycle"
deps.lifecycle = lifecycle

def rx = [:]
rx.rx2java = "io.reactivex.rxjava2:rxjava:$versions.rx2java"
rx.rx2kotlin =  "io.reactivex.rxjava2:rxkotlin:$versions.rx2kotlin"
rx.rx2android =  "io.reactivex.rxjava2:rxandroid:$versions.rx2android"
deps.rx = rx

def retrofit = [:]
retrofit.runtime =  "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson =  "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.rx =  "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.okhttp_logging_interceptor =  "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
deps.retrofit = retrofit

def dagger = [:]
dagger.runtime =  "com.google.dagger:dagger:$versions.dagger"
dagger.android_support =  "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.android_support_compiler =  "com.google.dagger:dagger-android-processor:$versions.dagger"
dagger.compiler =  "com.google.dagger:dagger-compiler:$versions.dagger"
deps.dagger = dagger

def glide = [:]
glide.runtime =  "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler =  "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def others = [:]
others.timber =  "com.jakewharton.timber:timber:$versions.timber"
others.gson =  "com.google.code.gson:gson:$versions.gson"
deps.others = others

def test = [:]
test.junit =  "junit:junit:$versions.junit"
test.mockito =  "org.mockito:mockito-core:$versions.mockito"
test.mockitokotlin2 =  "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito_kotlin"
deps.test = test

def android_test = [:]
android_test.espresso =  "androidx.test.espresso:espresso-core:$versions.espresso"
android_test.runner =  "androidx.test:runner:$versions.runner"
android_test.rules =  "androidx.test:rules:$versions.rules"
deps.android_test = android_test

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin

def build_versions = [:]
build_versions.min_sdk = 23
build_versions.target_sdk = 29
build_versions.build_tools = "29.0.2"
ext.build_versions = build_versions

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}
ext.addRepos = this.&addRepos
